openapi: 3.0.0
info: 
  title: Songs API
  version: 0.0.1
paths:
  /:
    get:
      summary: Returns a greeting message from Songs API
      operationId: getGreeting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello from Songs API"
  /songs:
    get:
      summary: Returns all songs
      operationId: getSongs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllSongs'
    post:
      summary: Create a new song
      operationId: createSong
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndPutSongRequestBody'
            example:
              name: The Thrill is Gone
              artist: B.B. King
              publish_year: 1969
      responses:
        '201':
          description: Song created successfully.
          headers:
            Location:
              description: URL of the created song.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongResponse'
              example:
                id: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
                name: The Thrill is Gone
                artist: B.B. King
                publish_year: 1969
        '400':
          description: Bad request. Invalid field(s) in request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorRequestBody'
        '409':
          description: Conflict with already existing song.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongAlreadyExists'
  /songs/{id}:
    get:
      summary: Gets a specific song by id.
      operationId: getSong
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the song to retrieve.
          schema:
            type: string
            example: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongResponse'
              example:
                id: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
                name: The Thrill is Gone
                artist: B.B. King
                publish_year: 1969
        '400':
          description: Bad request. Invalid format for id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidIdFormat'
        '404':
          description: Not found. Song with requested id does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongNotFound'
    put:
      summary: Updates existing song.
      operationId: updateSong
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the song to update.
          example: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAndPutSongRequestBody'
            example:
              name: The Thrill is Not Gone
              artist: B.B. King
              publish_year: 1969
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongResponse'
              example:
                id: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
                name: The Thrill is Not Gone
                artist: B.B. King
                publish_year: 1969
        '400':
          description: Bad request. Invalid format for id OR Invalid field(s) in request body.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidIdFormat'
                  - $ref: '#/components/schemas/ValidationErrorRequestBody'
        '404':
          description: Not found. Song with requested id does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongNotFound'
        '409':
          description: Conflict with already existing song.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongAlreadyExists'
    patch:
      summary: Partially updates an existing song.
      operationId: patchSong
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the song to update.
          example: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSongRequest'
            example:
              name: The Thrill is Gone Again
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongResponse'
              example:
                id: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
                name: The Thrill is Gone Again
                artist: B.B. King
                publish_year: 1969
        '400':
          description: Bad request. Invalid format for id OR Invalid field(s) in request body.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidIdFormat'
                  - $ref: '#/components/schemas/ValidationErrorRequestBody'
        '404':
          description: Not found. Song with requested id does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongNotFound'
        '409':
          description: Conflict with already existing song.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongAlreadyExists'
    delete:
      summary: Deletes an existing song.
      operationId: deleteSong
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the song to update.
          example: 7ccc951a-25cf-4009-bfb1-b8ef4300db46
      responses:
        '204':
          description: No content, successfully deleted a song.
        '400':
          description: Bad request. Invalid format for id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidIdFormat'
        '404':
          description: Not found. Song with requested id does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongNotFound'
components:
  schemas:
    AllSongs:
      type: array
      items:
        $ref: '#/components/schemas/SongResponse'
      example:
        - id: 0fa4ab70-379c-423e-8a89-c1fd344c685c
          name: Thunderstruck
          artist: AC/DC
          publish_year: 1990
        - id: 2fd527f0-d068-4834-ad64-5ddc60fcbba8
          name: Rokkibaby
          artist: Frederik
          publish_year: 1975
    CreateAndPutSongRequestBody:
      type: object
      required:
        - name
        - artist
        - publish_year
      properties:
        name:
          type: string
          description: The name of the song.
        artist:
          type: string
          description: Artist who recorded the song.
        publish_year:
          type: integer
          format: int32
          description: The year the song was recorded.
    PatchSongRequest:
      type: object
      anyOf:
        - required: name
        - required: artist
        - required: publish_year
      properties:
        name:
          type: string
          description: The name of the song.
        artist:
          type: string
          description: Artist who recorded the song.
        publish_year:
          type: integer
          description: The year the song was recorded.
    SongResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The id of the song.
        name:
          type: string
          description: The name of the song.
        artist:
          type: string
          description: Artist who recorded the song.
        publish_year:
          type: integer
          format: int32
          description: The year the song was recorded.
    SongAlreadyExists:
      type: object
      properties:
        message:
          type: string
          example:  "Song with provided name(name of the song), artist(artist of the song) 
                    and publish_year(publish_year of the song) already exists."
    ValidationErrorRequestBody:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
            description: Validation error message for the specific field
          example:
            artist: "must not be blank"
            name: "must not be blank"
            publish_year: "publish_year must be between 1889 and the current year."
      required:
        - message
        - errors
    InvalidIdFormat:
      type: object
      properties:
        message:
          type: string
          example: "Given identifier (ccc951a-25cf-4009-bfb1-b8ef4300db46) is invalid. Expected format: 8-4-4-4-12 hex."
    SongNotFound:
      type: object
      properties:
        message:
          type: string
          example: "Song with id 9ccc951a-25cf-4009-bfb1-b8ef4300db46 was not found"
