openapi: 3.0.0
info: 
  title: Songs API
  version: 0.0.1

paths:
  /:      #paths object
    get:  #path item object
      summary: Returns a greeting message from Songs API  #operation object
      operationId: getGreeting                            #operation object
      responses:                                              #operation object
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello from Songs API"

  /songs:
    get:
      summary: Returns all songs
      operationId: getSongs
      responses:
        '200':
          description: A list of all songs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
    post:
      summary: Create a new song
      operationId: createSong
      responses:
        '201':
          description: Song created successfully
          headers:
            Location:
              description: URL of the created song
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '409':
          description: Conflict with already existing song
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongAlreadyExists'






components:
  schemas:
    Song:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Thunderstruck
        artist:
          type: string
          example: AC/DC
        publish_year:
          type: integer
          format: int32
          example: 1990
    PutSongDto:
      type: object
      required:
        - name
        - artist
        - publish_year
      properties:
        name:
          type: string
        artist:
          type: string
        publish_year:
          type: integer
          format: int32
    SongAlreadyExists:
      type: object
      properties:
        message:
          type: string
          example:  "Song with provided name(name of the song), artist(artist of the song) and publish_year(publish_year of the song) already exists."
    BadRequest:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
            description: Validation error message for the specific field
          example:
            artist: "must not be blank"
            name: "must not be blank"
            publish_year: "publish_year must be between 1889 and the current year."
      required:
        - message
        - errors
